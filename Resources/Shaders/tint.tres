[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://bs0vnn0gbd13y"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_35q83"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_yu0nj"]
function = 1

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_6iscr"]
parameter_name = "HSV"

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_mq23j"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_gge2r"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_khddw"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(2, 2, 2)]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_67hp6"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 3

[sub_resource type="VisualShaderNodeVec4Parameter" id="VisualShaderNodeVec4Parameter_1ypue"]
expanded_output_ports = [0]
parameter_name = "Colour"
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_lexbn"]
output_port_for_preview = 0
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_m0xos"]
function = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool HSV;
uniform vec4 Colour = vec4(0.000000, 0.000000, 0.000000, 0.000000);



void fragment() {
// BooleanParameter:12
	bool n_out12p0 = HSV;


// Vector4Parameter:17
	vec4 n_out17p0 = Colour;
	float n_out17p4 = n_out17p0.a;


// Input:3
	vec4 n_out3p0 = COLOR;
	float n_out3p4 = n_out3p0.a;


	vec3 n_out8p0;
// ColorFunc:8
	{
		vec3 c = vec3(n_out3p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out8p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// VectorOp:10
	vec3 n_out10p0 = vec3(n_out17p0.xyz) + n_out8p0;


	vec3 n_out11p0;
// ColorFunc:11
	{
		vec3 c = n_out10p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out11p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}


// VectorOp:15
	vec3 n_out15p0 = vec3(n_out17p0.xyz) / vec3(n_out17p4);


// VectorOp:16
	vec3 n_in16p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out16p0 = vec3(n_out3p0.xyz) / n_in16p1;


// VectorOp:14
	vec3 n_out14p0 = n_out15p0 + n_out16p0;


	vec3 n_out13p0;
// Switch:13
	n_out13p0 = mix(n_out14p0, n_out11p0, float(n_out12p0));


// Output:0
	COLOR.rgb = n_out13p0;
	COLOR.a = n_out3p4;


}
"
graph_offset = Vector2(-54, 0)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(420, 1220)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_lexbn")
nodes/fragment/3/position = Vector2(-980, 860)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorFunc_m0xos")
nodes/fragment/8/position = Vector2(-580, 820)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_35q83")
nodes/fragment/10/position = Vector2(-320, 760)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorFunc_yu0nj")
nodes/fragment/11/position = Vector2(-120, 820)
nodes/fragment/12/node = SubResource("VisualShaderNodeBooleanParameter_6iscr")
nodes/fragment/12/position = Vector2(-980, 1280)
nodes/fragment/13/node = SubResource("VisualShaderNodeSwitch_mq23j")
nodes/fragment/13/position = Vector2(160, 960)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorOp_gge2r")
nodes/fragment/14/position = Vector2(-140, 1240)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorOp_khddw")
nodes/fragment/15/position = Vector2(-460, 1540)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_67hp6")
nodes/fragment/16/position = Vector2(-440, 1340)
nodes/fragment/17/node = SubResource("VisualShaderNodeVec4Parameter_1ypue")
nodes/fragment/17/position = Vector2(-980, 1460)
nodes/fragment/connections = PackedInt32Array(3, 0, 8, 0, 10, 0, 11, 0, 8, 0, 10, 1, 11, 0, 13, 1, 14, 0, 13, 2, 12, 0, 13, 0, 13, 0, 0, 0, 15, 0, 14, 0, 3, 0, 16, 0, 16, 0, 14, 1, 17, 0, 15, 0, 17, 0, 10, 0, 17, 4, 15, 1, 3, 4, 0, 1)
